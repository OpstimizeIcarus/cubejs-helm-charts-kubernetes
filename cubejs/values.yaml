# Default values for chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

namespace: "cubejs"
annotations: {reloader.stakater.com/auto: "true"}

cubeReplicas:
  cubeApi: 3
  cubeRefreshWorker: 1
  cubestoreRouter: 2
  cubestoreWorker: 2

# image:
#   repository: cubejs/cube
#   pullPolicy: IfNotPresent
#   # Overrides the image tag whose default is the chart appVersion.
#   tag: "latest"

# cube_images:
#   cubejs: "cubejs/cube:latest"
#   cubeStore: "cubejs/cubestore:latest"   

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

cubeApi:
  image: "cubejs/cubes:latest"
  pullPolicy: Always
  service:
    type: ClusterIP
    port: 4000
    service_port: 4000
  replicas: 3  
  configmap: 
    name: cubeapi-cm  
  env:
    var:
      CUBEJS_DB_TYPE: "mssql"
      CUBEJS_DEV_MODE: "true"
      CUBEJS_DB_HOST: <db_host.hostname>
      CUBEJS_DB_NAME: <db_name>
      CUBEJS_DB_USER: <db_username>
      CUBEJS_DB_PASS: <db_password>
      CUBEJS_DB_SSL: "true"
      CUBEJS_DEFAULT_API_SCOPES: "graphql,meta,data,jobs"
      CUBEJS_CUBESTORE_HOST: "cubestore-router"
      CUBEJS_LOG_LEVEL: "trace"

cubeRefreshWorker:
  image: "cubejs/cubes:latest"
  pullPolicy: Always
  service:
    type: ClusterIP
    port: 80
    service_port: 80
  replicas: 1  
  configmap: 
    name: cuberefreshworker-cm 
  env:
    var:
      CUBEJS_DB_TYPE: "mssql"
      CUBEJS_DEV_MODE: "true"
      CUBEJS_DB_HOST: <db_host.hostname>
      CUBEJS_DB_NAME: <db_name>
      CUBEJS_DB_USER: <db_username>
      CUBEJS_DB_PASS: <db_password>
      CUBEJS_DB_SSL: "true"
      CUBEJS_DEFAULT_API_SCOPES: "graphql,meta,data,jobs"
      CUBEJS_CUBESTORE_HOST: "cubestore-router"
      CUBEJS_REFRESH_WORKER: "true"
      CUBEJS_LOG_LEVEL: "trace"

cubestoreRouter:
  image: "cubejs/cubestore:latest"   
  pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 9999
    service_port: 9999
  replicas: 2   
  configmap: 
    name: cubestorerouter-cm 
  env:
    var:
      CUBESTORE_REMOTE_DIR: "/cube/data"
      CUBESTORE_META_PORT: "9999"
      CUBESTORE_SERVER_NAME: "cubestore-router:9999"
      CUBEJS_LOG_LEVEL: "trace" 


cubestoreWorker:
  image: "cubejs/cubestore:latest" 
  pullPolicy: IfNotPresent  
  service:
    type: ClusterIP
    port: 10001
    service_port: 10001
  replicas: 2
  configmap: 
    name: cubestoreworker-cm 
  env:
    var:
      CUBESTORE_SERVER_NAME: "cubestore-worker-0.cubestore-worker:10001"
      CUBESTORE_WORKER_PORT: "10001"
      CUBESTORE_REMOTE_DIR: "/cube/data"
      CUBESTORE_META_ADDR: "cubestore-router:9999"
      CUBEJS_LOG_LEVEL: "trace"

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
